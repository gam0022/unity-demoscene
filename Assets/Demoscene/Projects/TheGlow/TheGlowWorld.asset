%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 160e2c6c162f4a5489a4784f095d4158, type: 3}
  m_Name: TheGlowWorld
  m_EditorClassIdentifier: 
  shaderName: TheGlowWorld
  shaderReference: {fileID: 4800000, guid: 87a584a97f34fd4438ddd726e04938ed, type: 3}
  shaderTemplate: 2. Direct GBuffer
  variables:
  - key: Name
    value: TheGlowWorld
  - key: Culling
    value: Back
  - key: RaymarchingShaderDirectory
    value: Assets/Raymarching/Shaders/Include
  conditions:
  - key: ShadowCaster
    value: 1
  - key: FollowObjectScale
    value: 0
  - key: DoNotOutputDepth
    value: 0
  - key: SphericalHarmonicsPerPixel
    value: 1
  - key: CameraInsideObject
    value: 0
  - key: FallbackToStandardShader
    value: 1
  - key: WorldSpace
    value: 1
  - key: FallbackToDiffuse
    value: 0
  blocks:
  - key: Properties
    value: '_FloorDiffuse("Floor Diffuse", Color) = (1.0, 1.0, 1.0, 1.0)

      _FloorSpecular("Floor Specular", Color) = (1.0, 1.0, 1.0, 1.0)

      _SlideEmission("Slide Emission", Vector) = (2.0, 2.0, 5.0, 1.0)

      _InnerEmission("Inner Emission", Vector) = (3.0, 1.0, 1.0, 1.0)'
    folded: 0
  - key: DistanceFunction
    value: "#define PI2 (2.0 * PI)\n\nfloat2x2 opRotate(in float a)\n{\n    float
      s = sin(a), c = cos(a);\n    return float2x2(c, s, -s, c);\n}\n\n// https://www.shadertoy.com/view/Mlf3Wj\nfloat2
      opFoldRotate(in float2 p, in float s)\n{\n    float a = PI / s - atan2(p.x,
      p.y);\n    float n = PI2 / s;\n    a = floor(a / n) * n;\n    p = mul(opRotate(a),
      p);\n    return p;\n}\n\nfloat sdHoleBox(float3 pos, float3 outer, float3 inner)\n{\n
      \   return max(sdBox(pos, outer), -sdBox(pos, inner));\n}\n\nfloat dOuterPillar(float3
      pos)\n{\n    float3 p = pos;\n    p.xz = Repeat(p.xz, float2(3, 3));\n    p.xz
      = opFoldRotate(p.xz, 12.0 * sin(_Time.x));\n    p.y = Repeat(p.y, 0.5);\n    return
      sdHoleBox(p, float3(0.3 + 0.1 * sin(36.0 * _Time.x + 2.0 * Rand(float2(floor(pos.y
      * 2), 0))), 0.2, 0.3), float3(0.5, 0.15, 0.25));\n}\n\nfloat dInnerPillar(float3
      pos)\n{\n    float3 p = pos;\n    p.xz = Repeat(p.xz, float2(3, 3));\n    p.xz
      = opFoldRotate(p.xz, 12.0 * cos(12.0 * _Time.x));\n    p.y = Repeat(p.y, 0.2);\n
      \   return Box(p, float3(0.3 * abs(sin(36.0 * _Time.x)), 0.2, 0.15));\n}\n\nfloat
      dFloor(float3 pos)\n{\n    float3 p = pos;\n    p.xz = Repeat(p.xz, 0.5);\n
      \   p.y += 1 + 0.1 * sin(36.0 * _Time.x + 2.0 * Rand(floor(2.0 * pos.xz)));\n
      \   return sdBox(p, float3(0.2, 0.2, 0.2));\n}\n\ninline float DistanceFunction(float3
      pos)\n{\n    float d = dFloor(pos);\n    d = min(dOuterPillar(pos), d);\n    d
      = min(dInnerPillar(pos), d);\n    return d;\n}"
    folded: 0
  - key: PostEffect
    value: "float4 _FloorDiffuse;\nfloat4 _FloorSpecular;\nfloat4 _SlideEmission;\nfloat4
      _InnerEmission;\n\ninline void PostEffect(RaymarchInfo ray, inout PostEffectOutput
      o)\n{\n    float a = frac(4.0 * ray.endPos.y - 2.0 * _Time.x - 0.5);\n    float
      width = 0.02;\n    o.emission = _SlideEmission * abs(sin(PI * 12.0 * _Time.x))
      * step(a, width) * ((a + 0.5 * width) / width);\n \n    if (abs(dInnerPillar(ray.endPos))
      < ray.minDistance)\n    {\n        o.emission = _InnerEmission * abs(sin(PI
      * 24.0 * _Time.x));\n    }\n \n    if (abs(dFloor(ray.endPos)) < ray.minDistance)\n
      \   {\n        o.diffuse = _FloorDiffuse;\n        o.specular =_FloorSpecular;\n
      \   }\n}"
    folded: 0
  basicFolded: 0
  conditionsFolded: 0
  variablesFolded: 0
  materialsFolded: 0
  distanceFunction: 
  postEffect: 
