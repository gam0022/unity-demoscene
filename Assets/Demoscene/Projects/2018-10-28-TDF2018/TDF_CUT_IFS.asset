%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3acd6fe57257048db802c1c4c2b75248, type: 3}
  m_Name: TDF_CUT_IFS
  m_EditorClassIdentifier: 
  shaderName: TDF_Cut1
  shaderReference: {fileID: 4800000, guid: 0a9f6b49dd72f964cb6ad9cf08fb34d0, type: 3}
  shaderTemplate: uRaymarching/Direct GBuffer
  variables:
  - key: Name
    value: TDF_Cut1
  - key: Culling
    value: Off
  - key: RaymarchingShaderDirectory
    value: Assets/uRaymarching/Shaders/Include
  conditions:
  - key: ShadowCaster
    value: 1
  - key: WorldSpace
    value: 1
  - key: FollowObjectScale
    value: 0
  - key: DoNotOutputDepth
    value: 0
  - key: CameraInsideObject
    value: 0
  - key: FallbackToDiffuse
    value: 1
  blocks:
  - key: Properties
    value: // _Color2("Color2", Color) = (1.0, 1.0, 1.0, 1.0)
    folded: 0
  - key: DistanceFunction
    value: "// KIFS\n// https://www.shadertoy.com/view/MdlSRM\n\n void ry(inout vec3
      p, float a){\n \tfloat c,s;vec3 q=p;\n  \tc = cos(a); s = sin(a);\n  \tp.x =
      c * q.x + s * q.z;\n  \tp.z = -s * q.x + c * q.z;\n }\n void rx(inout vec3 p,
      float a){\n \tfloat c,s;vec3 q=p;\n  \tc = cos(a); s = sin(a);\n  \tp.y = c
      * q.y - s * q.z;\n  \tp.z = s * q.y + c * q.z;\n }\n\n void rz(inout vec3 p,
      float a){\n \tfloat c,s;vec3 q=p;\n  \tc = cos(a); s = sin(a);\n  \tp.x = c
      * q.x - s * q.y;\n  \tp.y = s * q.x + c * q.y;\n }\nfloat plane(vec3 p, float
      y) {\n    return length(vec3(p.x, y, p.z) - p);\n}\n\n// folding hex from nimitz:
      https://www.shadertoy.com/view/XtdGDB\nvec2 fold(vec2 p)\n{\n    p.xy = abs(p.xy);\n
      \   const vec2 pl1 = vec2(-0.5, 0.8657);\n    const vec2 pl2 = vec2(-0.8657,
      0.4);\n    p -= pl1*2.*min(0., dot(p, pl1));\n    p -= pl2*2.*min(0., dot(p,
      pl2));\n    return p;\n}\n\nvec3 mat=vec3(0.0, 0.0, 0.0);\nbool bcolor = false;\nvec3
      _Offset;\n\nfloat menger_spone(in vec3 z0){\n\tvec4 z=vec4(z0,1.0);\n    vec3
      offset = _Offset;\n    float scale = 2.46;\n\tfor (int n = 0; n < 4; n++) {\n\t\tz
      = abs(z);\n\t\tif (z.x<z.y)z.xy = z.yx;\n\t\tif (z.x<z.z)z.xz = z.zx;\n\t\tif
      (z.y<z.z)z.yz = z.zy;\n\t\tz = z*scale;\n\t\tz.xyz -= offset*(scale-1.0);\n
      \      \tif(bcolor && n==2)\n            mat+=vec3(0.5, 0.5, 0.5)+sin(z.xyz)*vec3(1.0,
      0.24, 0.245);\n\t\tif(z.z<-0.5*offset.z*(scale-1.0))\n            z.z+=offset.z*(scale-1.0);\n\t}\n\treturn
      (length(max(abs(z.xyz)-vec3(1.0, 1.0, 1.0),0.0))-0.05)/z.w;\n}\n\ninline float
      DistanceFunction(float3 pos)\n{\n    pos.yx = fold(pos.yx);\n    pos = Mod(pos,
      3.0);\n    return menger_spone(pos);\n}"
    folded: 0
  - key: PostEffect
    value: 'inline void PostEffect(RaymarchInfo ray, inout PostEffectOutput o)

      {

      }'
    folded: 0
  constants: {fileID: 11400000, guid: 4df15a420345e4af98645ddd9620aa5b, type: 2}
  basicFolded: 1
  conditionsFolded: 1
  variablesFolded: 1
  materialsFolded: 0
  constantsFolded: 0
